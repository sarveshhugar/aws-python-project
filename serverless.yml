service: serverless-dynamodb
frameworkVersion: ">=2.24.0"


provider:
  name: aws
  runtime: python3.8
  environment:
    DYNAMODB_TABLE: ${self:custom.tableName}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
             - dynamodb:*
             - cognito-idp:*
             - s3:GetObject
             - ses:* 
            
          Resource: "*"

custom:
  tableName: emp-data
  

plugins:
  - serverless-offline

functions:
  create:
    handler: src/create.create
    events:
      - http:
          path: src
          method: post
          cors: true

  list:
    handler: src/list.list
    events:
      - http:
          path: src/{company}
          method: get
          cors: true

  get:
    handler: src/get.get
    events:
      - http:
          path: src/{company}/{email}
          method: get
          cors: true

  update:
    handler: src/update.update
    events:
      - http:
          path: src/update/{company}
          method: put
          cors: true

  delete:
    handler: src/delete.delete
    events:
      - http:
          path: src/{company}/{email}
          method: delete
          cors: true

  search:
    handler: src/search.search
    events:
      - http:
          path: src/search
          method: post
          cors: true

  # createFile:
  #   handler: s3files/createFile.createFile
  #   event: 
  #     - http:
  #         path: s3files/{filename}
  #         method: post
  #         cors: true

resources:
  Resources:
    srcDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: company
            AttributeType: S
          - AttributeName: email
            AttributeType: S
          - AttributeName: companytype
            AttributeType: S
          - AttributeName: from
            AttributeType: S
          - AttributeName: firstname
            AttributeType: S
          - AttributeName: lastname
            AttributeType: S
          - AttributeName: YOE
            AttributeType: S
          - AttributeName: yearjoined
            AttributeType: S
          


        KeySchema:
          - AttributeName: company
            KeyType: HASH
          - AttributeName: email
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

        GlobalSecondaryIndexes:
          - IndexName: companytype-index
            KeySchema:
              - AttributeName: companytype
                KeyType: HASH
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
              
            Projection:
              ProjectionType: 'ALL'
        LocalSecondaryIndexes:
          - IndexName: from-index
            KeySchema:
              - AttributeName: company
                KeyType: HASH
              - AttributeName: from
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'
          - IndexName: firstname-index
            KeySchema:
              - AttributeName: company
                KeyType: HASH
              - AttributeName: firstname
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'
          - IndexName: lastname-index
            KeySchema:
              - AttributeName: company
                KeyType: HASH
              - AttributeName: lastname
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'
          - IndexName: YOE-index
            KeySchema:
              - AttributeName: company
                KeyType: HASH
              - AttributeName: YOE
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'
          - IndexName: yearjoined-index
            KeySchema:
              - AttributeName: company
                KeyType: HASH
              - AttributeName: yearjoined
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'


# resources:
#   Resources:
#     srcDynamoDbTable:
#       Type: 'AWS::DynamoDB::Table'
#       DeletionPolicy: Retain
#       Properties:
#         AttributeDefinitions:
#           -
#             AttributeName: email
#             AttributeType: S
          
#         KeySchema:
#           -
#             AttributeName: email
#             KeyType: HASH
#         ProvisionedThroughput:
#           ReadCapacityUnits: 1
#           WriteCapacityUnits: 1
#         TableName: "7EDGE-EMPLOYEE"
        # BillingMode: PAY_PER_REQUEST

    # s3bucket:
    #   Type: AWS::S3::Bucket
    #   Properties: 
    #     BucketName: ${self:custom.bucketName} 
